name: wsl deb
on:
  workflow_dispatch:
  push:
    branches: main

jobs:
  debian-test:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Debian Trixie WSL
        uses: Vampire/setup-wsl@v6
        with:
          distribution: Debian
          use-cache: true

      - name: Fix Repository Issues
        shell: wsl-bash {0}
        run: |
          echo "=== Current System Info ==="
          cat /etc/os-release
          echo ""

          echo "=== Current Sources ==="
          cat /etc/apt/sources.list
          echo ""

          echo "=== Cleaning up problematic repositories ==="
          # First, completely clean up existing repositories
          sudo rm -f /etc/apt/sources.list.d/* 2>/dev/null || true

          # Backup original sources list
          sudo cp /etc/apt/sources.list /etc/apt/sources.list.backup

          # Install required packages for GPG key management using existing repos
          echo "=== Installing GPG key management tools ==="
          sudo apt update || true
          sudo apt install -y wget gnupg ca-certificates

          # Convert to merged-usr layout BEFORE changing repositories
          echo "=== Converting to merged-usr layout ==="
          sudo DEBIAN_FRONTEND=noninteractive apt install -y usrmerge || true

          # Verify the conversion worked
          if [ -L /bin ]; then
            echo "SUCCESS: /bin is now a symbolic link"
          else
            echo "WARNING: /bin is still a directory, attempting manual conversion"
            # Manual conversion if usrmerge failed
            sudo mkdir -p /usr/bin /usr/sbin /usr/lib
            if [ -d /bin ] && [ ! -L /bin ]; then
              sudo cp -a /bin/* /usr/bin/ 2>/dev/null || true
              sudo rm -rf /bin
              sudo ln -s /usr/bin /bin
            fi
            if [ -d /sbin ] && [ ! -L /sbin ]; then
              sudo cp -a /sbin/* /usr/sbin/ 2>/dev/null || true
              sudo rm -rf /sbin
              sudo ln -s /usr/sbin /sbin
            fi
            if [ -d /lib ] && [ ! -L /lib ]; then
              sudo cp -a /lib/* /usr/lib/ 2>/dev/null || true
              sudo rm -rf /lib
              sudo ln -s /usr/lib /lib
            fi
          fi

          # Add Debian GPG keys
          echo "=== Adding Debian GPG keys ==="
          wget -q -O - https://ftp-master.debian.org/keys/archive-key-12.asc | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/debian-archive-key-12.gpg
          wget -q -O - https://ftp-master.debian.org/keys/release-12.asc | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/debian-release-12.gpg

          # Completely replace sources.list with Trixie repositories
          echo "=== Updating to Debian Trixie ==="
          sudo tee /etc/apt/sources.list > /dev/null <<EOF
          # Debian Trixie (testing) repositories
          deb http://deb.debian.org/debian trixie main contrib non-free non-free-firmware
          deb-src http://deb.debian.org/debian trixie main contrib non-free non-free-firmware

          # Trixie security updates
          deb http://deb.debian.org/debian-security trixie-security main contrib non-free non-free-firmware
          deb-src http://deb.debian.org/debian-security trixie-security main contrib non-free non-free-firmware

          # Trixie updates
          deb http://deb.debian.org/debian trixie-updates main contrib non-free non-free-firmware
          deb-src http://deb.debian.org/debian trixie-updates main contrib non-free non-free-firmware
          EOF

          # Clean apt cache to force fresh repository data
          sudo apt clean

          echo "=== Updated Sources ==="
          cat /etc/apt/sources.list

      - name: Update Package Lists and Upgrade to Trixie
        shell: wsl-bash {0}
        run: |
          echo "=== Updating package lists with Trixie repositories ==="
          # Try multiple times in case of temporary network issues
          for i in {1..3}; do
            echo "Update attempt $i/3..."
            if sudo apt update; then
              echo "Package list update successful"
              break
            else
              echo "Update failed, retrying in 10 seconds..."
              sleep 10
            fi
          done

          echo "=== Installing additional required packages ==="
          sudo DEBIAN_FRONTEND=noninteractive apt install -y \
            debian-archive-keyring \
            debian-keyring \
            ca-certificates \
            apt-transport-https

          echo "=== Final package list update ==="
          sudo apt update

          echo "=== Upgrading to Debian Trixie ==="
          sudo DEBIAN_FRONTEND=noninteractive apt full-upgrade -y \
            -o Dpkg::Options::="--force-confdef" \
            -o Dpkg::Options::="--force-confold" \
            -o APT::Get::Fix-Missing=true

          echo "=== Verifying Trixie Installation ==="
          cat /etc/os-release
          lsb_release -a 2>/dev/null || echo "lsb_release not available"

          echo "=== Final repository verification ==="
          sudo apt update

      - name: Install Basic Tools
        shell: wsl-bash {0}
        run: |
          sudo apt install -y \
            curl \
            wget \
            git \
            build-essential \
            python3 \
            python3-pip \
            cmake \
            openmpi-bin \
            openmpi-common \
            libopenmpi-dev \
            gfortran

      - name: Checkout HDF5 develop branch
        shell: wsl-bash {0}
        run: |
          echo "=== Checking out HDF5 develop branch ==="
          git clone https://github.com/HDFGroup/hdf5.git
          cd hdf5
          git checkout develop
          echo "Current branch: $(git branch --show-current)"
          echo "Latest commit: $(git log --oneline -1)"

      - name: Build and Test HDF5
        shell: wsl-bash {0}
        run: |
          cd hdf5

          echo "=== Creating build directory ==="
          mkdir build
          cd build

          echo "=== Configuring HDF5 with CMake ==="
          cmake \
            -DBUILDNAME:STRING="ompi/f/h/mp/sf" \
            -DCMAKE_CXX_COMPILER=mpicxx \
            -DCMAKE_C_COMPILER=mpicc \
            -DCMAKE_Fortran_COMPILER=mpifort \
            -DCTEST_DROP_SITE_INIT:STRING=my.cdash.org \
            -DHDF5_BUILD_FORTRAN:BOOL=ON \
            -DHDF5_BUILD_HL_LIB:BOOL=ON \
            -DHDF5_ENABLE_MAP_API:BOOL=ON \
            -DHDF5_ENABLE_PARALLEL:BOOL=ON \
            -DHDF5_ENABLE_SUBFILING_VFD:BOOL=ON \
            -DMPIEXEC_MAX_NUMPROCS=2 \
            -DMPIEXEC_PREFLAGS="--allow-run-as-root --oversubscribe" \
            -DSITE:STRING="wsl/deb-13.1" \
            ..

          echo "=== Building HDF5 ==="
          make -j$(nproc)

          echo "=== Running HDF5 tests ==="
          ctest -D Experimental -C Release
