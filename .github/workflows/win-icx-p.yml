name: win icx p

on:
  push:
    branches:
      - main

env:
  WINDOWS_BASEKIT_URL: https://registrationcenter-download.intel.com/akdlm/IRC_NAS/e83a8e64-04fc-45df-85c6-c2208d03bdb5/w_BaseKit_p_2024.2.0.635_offline.exe
  WINDOWS_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/IRC_NAS/0d500705-397e-41b3-8b2b-2a3da1753fc2/w_HPCKit_p_2024.2.0.633_offline.exe
  WINDOWS_CPP_COMPONENTS: intel.oneapi.win.cpp-dpcpp-common
  WINDOWS_DPCPP_COMPONENTS: intel.oneapi.win.cpp-dpcpp-common
  CACHE_NUMBER: 6
  SAMPLES_TAG: 2024.2.0
  AI_SAMPLES_TAG: 2024.1.0
  COMPILER_VERSION: 2024.2.0
  TBB_VERSION: 2021.13.0
  VS_VER: vs2022

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Install CMake
        uses: lukka/get-cmake@latest
      - name: cache intel install
        id: cache-install
        uses: actions/cache@v2
        with:
          path: |
              C:\Program Files (x86)\Intel\oneAPI\setvars-vcvarsall.bat
              C:\Program Files (x86)\Intel\oneAPI\compiler
          key: install-${{ env.CACHE_NUMBER }}-${{ env.WINDOWS_HPCKIT_URL }}-${{ env.WINDOWS_CPP_COMPONENTS }}-compiler-${{ hashFiles('**/scripts/cache_exclude_windows.sh') }}
      - name: install intel
        run: |
          git clone --depth=1 https://github.com/oneapi-src/oneapi-ci.git oneapi-ci
          cd oneapi-ci
          scripts/install_windows.bat ${{ env.WINDOWS_HPCKIT_URL }} ${{ env.WINDOWS_CPP_COMPONENTS }}
      - name: Install Intel MPI
        uses: mpi4py/setup-mpi@master
        with:
          mpi: intelmpi
      - name: Checkout HDF5
        shell: cmd
        run: |
          git clone https://github.com/HDFGroup/hdf5.git
      - name: Check MPI
        shell: cmd
        run: |
          dir "C:/Program Files (x86)/Intel/oneAPI/mpi"
          dir "C:/Program Files (x86)/Intel/oneAPI/mpi/latest/include"
          dir "C:/Program Files (x86)/Intel/oneAPI/mpi/latest/bin/"
          "C:/Program Files (x86)/Intel/oneAPI/mpi/latest/env/vars.bat"
      - name: Configure & Build
        shell: cmd
        run: |
          set LIB=C:\Program Files (x86)\Intel\oneAPI\mpi\2021.13\lib;%LIB%
          set LIBPATH=C:\Program Files (x86)\Intel\oneAPI\mpi\latest\lib;C:\Program Files (x86)\Intel\oneAPI\compiler\2024.2\lib;%LIBPATH%
          set
          cd hdf5
          mkdir build
          cd build
          cmake -G Ninja -DCMAKE_C_COMPILER="C:/Program Files (x86)/Intel/oneAPI/compiler/latest/bin/icx.exe" -DCMAKE_CXX_COMPILER="C:/Program Files (x86)/Intel/oneAPI/compiler/latest/bin/icpx.exe" -DBUILD_SHARED_LIBS:BOOL=OFF  -DHDF5_BUILD_FORTRAN:BOOL=OFF  -DHDF5_ENABLE_PARALLEL:BOOL=ON  -DHDF5_ENABLE_Z_LIB_SUPPORT:BOOL=OFF -DHDF5_ENABLE_SZIP_SUPPORT:BOOL=OFF -DHDF5_ENABLE_SUBFILING_VFD:BOOL=OFF -DMPIEXEC_EXECUTABLE:FILEPATH="C:\Program Files (x86)\Intel\oneAPI\mpi\2021.13\bin\mpiexec.exe" -DMPI_C_HEADER_DIR:PATH="C:\Program Files (x86)\Intel\oneAPI\mpi\2021.13\include" -DCTEST_DROP_SITE_INIT=my.cdash.org -DSITE=win -DBUILDNAME="ninja/icx/+p" ..
          ctest -D Experimental
