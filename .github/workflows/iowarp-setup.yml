name: IOWarp Install and Build

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  iowarp-setup:
    runs-on: ubuntu-latest
    env:
      IOWARP: ${{ github.workspace }}/iowarp
      GITHUB_USERNAME: hyoklee
      GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}

    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
#          sudo apt-get install -y lmod

      - name: Install yq (YAML processor)
        run: |
          sudo wget -O /usr/bin/yq "https://github.com/mikefarah/yq/releases/download/v4.43.1/yq_linux_amd64"
          sudo chmod +x /usr/bin/yq

      - name: Clone IOWarp Install Repo
        run: |
          mkdir -p "${IOWARP}"
          git clone https://github.com/iowarp/iowarp-install.git "${IOWARP}/iowarp-install"

      - name: Install wrpgit and test
        run: |
          cd "${IOWARP}/iowarp-install"
          pip3 install -r requirements.txt
          chmod +x wrpgit
          ./wrpgit init
          yq eval '
            .username = strenv(GITHUB_USERNAME) |
            .protocol = "https" |
            .token = strenv(GITHUB_TOKEN) |
            .modules[].fork = false
          ' -i wrpgit.yaml
          ./wrpgit clone
          git clone https://github.com/spack/spack.git -b v0.23.0 "${HOME}/spack"
          source "${HOME}/spack/share/spack/setup-env.sh"
          spack external find
          spack config add "modules:default:enable:[lmod]"
          spack install lmod
          source $(spack location -i lmod)/lmod/lmod/init/bash
          echo $SPACK_ROOT
          export MODULEPATH=$SPACK_ROOT/share/spack/lmod/linux-ubuntu24.04-x86_64/Core
          echo $MODULEPATH
          spack repo add "${IOWARP}/iowarp-install/iowarp-spack"
          spack install hdf5
          spack load hdf5
          spack spec iowarp
          spack install iowarp
          spack load iowarp
          module use $MODULEPATH
          module spider
          module avail
          module list
          cd "${IOWARP}/iowarp-install"
          pip install -r requirements.txt
          ./wrpgit setup
          ./wrpgit build
#          ./wrpgit clean
#          ./wrpgit recreate
# I don't know why "clean" & "recreate" are necessary yet.
      - name: jarvis
        run: |
          source "${HOME}/spack/share/spack/setup-env.sh"
          spack load lmod
          spack load hdf5
          spack load iowarp
          source $(spack location -i lmod)/lmod/lmod/init/bash
          which scspkg
          SCSPKG_MODULE_DIR=$(scspkg module dir)
          which jarvis
          module use ${SCSPKG_MODULE_DIR}
          module spider
          module avail
          module load content-transfer-engine
          module load content-assimilation-engine
          module load ppi-chi-nettest
          module load ppi-jarvis-util
          module load ppi-jarvis-cd
          module load iowarp-runtime-util
          module list
          jarvis bootstrap from local
          sleep 5
          jarvis rg build
          sleep 5
          jarvis repo list
          jarvis env build jarvis_wrp_cae
          jarvis env build hermes
          find ${IOWARP} -name '*.yaml'
          find ${HOME}/.jarvis
          find ${HOME}/.scspkg
          pwd
          jarvis ppl create test_omni
          jarvis ppl append omni_parse omni_yaml=/home/runner/work/actions/actions/iowarp/content-assimilation-engine/omni/config/demo_job.yaml wrp_path=/home/runner/.scspkg/packages/content-assimilation-engine/bin/wrp

          jarvis ppl load yaml /home/runner/work/actions/actions/iowarp/content-assimilation-engine/test/jarvis_wrp_cae/pipelines/omni/test_omni_quick.yaml
          sleep 5
          jarvis ppl print
          cd /home/runner/work/actions/actions/iowarp/content-assimilation-engine/omni
          jarvis ppl run
# The following always returns 1 (error).
#          whilc module
# Module Not found
#          module load omni_parse
#
#          cat $(jarvis path +shared)/chimaera_run/hostfile
#          cat $(jarvis path +shared)/chimaera_run/chimaera_server.yaml
#          ctest -VV
# This makes omni_parse not found.
#          jarvis env build hermes
#          jarvis pkg conf chimaera_run data_shm=500m rdata_shm=500m task_shm=500m qdepth=50 worker_cpus=[0,1,1]
#          jarvis ppl print
#          jarvis ppl index load jarvis_hermes.hermes.test_hermes
#           jarvis ppl load yaml /home/runner/work/actions/actions/iowarp/content-assimilation-engine/test/jarvis_wrp_cae/pipelines/omni/test_omni_demo.yaml
#           jarvis ppl load yaml /home/runner/.jarvis/builtin/pipelines/simple_test.yaml
#           jarvis ppl load yaml /home/runner/work/actions/actions/iowarp/content-transfer-engine/test/jarvis_hermes/pipelines/hermes/test_hermes.yaml
#          jarvis env build hermes
#           jarvis ppl load yaml /home/runner/.scspkg/packages/content-assimilation-engine/jarvis/jarvis_wrp_cae/pipelines/omni/test_omni_quick.yaml                    
# This causes omni_parse package not found 
#           jarvis ppl load yaml /home/runner/work/actions/actions/iowarp/content-assimilation-engine/test/jarvis_wrp_cae/pipelines/omni/test_omni_quick.yaml
#           jarvis ppl create test_omni_quick
