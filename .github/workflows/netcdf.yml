name: netCDF

on:
  workflow_dispatch:
  push:
    branches: [ main- ]  
  pull_request:
    branches: [ main- ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Install System dependencies
      run: |
        sudo apt update
        sudo apt install -y libaec-dev zlib1g-dev automake autoconf libcurl4-openssl-dev libjpeg-dev wget curl bzip2 m4 flex bison cmake libzip-dev doxygen openssl libtool libtool-bin
    - name: Checkout HDF5
      uses: actions/checkout@v3
      with:
        repository: HDFGroup/hdf5
        path: hdf5
    - name: Install HDF5
      run: |
        cd hdf5
        ./autogen.sh
        ./configure --prefix=/usr/local --disable-static --enable-shared --enable-hl --with-szlib
        make -j
        sudo make install -j
    - name: Checkout netCDF
      uses: actions/checkout@v3
      with:
        repository: unidata/netcdf-c
        path: netcdf-c
    - name: Install netCDF
      run: |
        cd netcdf-c
        autoreconf -if
        CFLAGS=${CFLAGS} LDFLAGS=${LDFLAGS} LD_LIBRARY_PATH=${LD_LIBRARY_PATH} ./configure --enable-hdf5 --enable-dap --disable-dap-remote-tests  --enable-doxygen  --enable-external-server-tests
        cat config.log
        cat libnetcdf.settings
        CFLAGS=${CFLAGS} LDFLAGS=${LDFLAGS} LD_LIBRARY_PATH=${LD_LIBRARY_PATH} make -j
        CFLAGS=${CFLAGS} LDFLAGS=${LDFLAGS} LD_LIBRARY_PATH=${LD_LIBRARY_PATH} make check TESTS="" -j
        LD_LIBRARY_PATH="/home/runner/work/actions/actoins/netcdf-c/liblib/.libs:${LD_LIBRARY_PATH}"
        CFLAGS=${CFLAGS} LDFLAGS=${LDFLAGS} LD_LIBRARY_PATH=${LD_LIBRARY_PATH} make check -j
